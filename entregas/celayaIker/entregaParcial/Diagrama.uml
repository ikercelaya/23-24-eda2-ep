@startuml

class App {
}

class Author {
    - int id
    - String name
    + Author(int, String)
    + int getId()
    + String getName()
    + String toString()
}

class Book {
    - int id
    - String title
    - int publicationYear
    - final String type
    + Book(int, String, int, String)
    + int getId()
    + String getTitle()
    + int getPublicationYear()
    + String getType()
    + String toString()
}

class BookAuthor {
    - int bookId
    - int authorId
    + BookAuthor(int, int)
    + int getBookId()
    + int getAuthorId()
}

class LibraryManager {
    - List<Book> books
    - List<Author> authors
    - List<BookAuthor> relations
    - Scanner scanner
    + LibraryManager()
    + void startLibraryManager()
    + void addBook()
    + void listBooks()
    + void addAuthor()
    + void assignAuthorToBook()
    + List<Author> getAuthorsByBookId(int)
    + List<Book> getBooksByAuthorId(int)
    + Book findBookById(int)
    + Author findAuthorById(int)
    + void listAuthors()
}

App --> LibraryManager
LibraryManager --> Book : manages >
LibraryManager --> Author : manages >
LibraryManager --> BookAuthor : manages >

Book <-- BookAuthor : < has
Author <-- BookAuthor : < has

@enduml
